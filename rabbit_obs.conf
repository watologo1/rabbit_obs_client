# rabbit obs client configuration
#
# All configuration variables must be set for every package that
# should be listened for.
#
# All configuration variables can be declared in the DEFAULT section.
# They can also be declared or overwritten in each package section.
#
# Below example config makes the rabbit_obs_client systemd process
# listen for successful builds for exactly one package (cobbler)
# in project (home:trenn:cobbler_mainline_sle15_sp1), built against
# repo SUSE_SLE-15-SP1_GA_standard and architecture x86_64.
# This package is written in python and therefore declared noarch
# in cobbler.spec
#
# On every successful built on the server:
# /bin/true home:trenn:cobbler_mainline_sle15_sp1 cobbler SUSE_SLE-15-SP1_GA_standard
# is executed and its output is logged in a file:
# <log_dir>/home:trenn:cobbler_mainline_sle15_sp1_cobbler_SUSE_SLE-15-SP1_GA_standard_<date_time>.log
# where log_dir is the directory passed to rabbit_obs_client daemon

[DEFAULT]
# A local user with OBS credentials in ~/.config/osc/oscrc
# https://de.opensuse.org/openSUSE:Build_Service_Anleitung
user = trenn

# The executable which is executed when a matching package got
# successfully built, downloaded and locally updated (via rpm) via:
# trigger_cmd <project> <package> <repo>
#trigger_cmd = /root/cobbler-tools/libvirt_test_environment/start_cobbler_build_trigger_test.sh
trigger_cmd = "/bin/true"

# The architecture the package(s) in the repo are built for on the OBS server
buildarch = x86_64

# Compared to buildarch above, the package(s) could be architecture independent
# and might be declared noarch. Then set pkg_arch noarch here
pkg_arch = x86_64

[cobbler]
package = cobbler
project = home:trenn:cobbler_mainline_sle15_sp1
repo = SUSE_SLE-15-SP1_GA_standard
pkg_arch = noarch

